1. 클라이언트 요청문에서 return 값을 명시하면 해당 값만 받아올 수 있다.


2. Access-Control-Allow-Headers을 설정할 떄 value는 띄어서 사용하는게 아니라 붙여야 한다.


3. resolver 함수는 req 객체를 받을 수 있다.
3-1. 그렇기 위해서는 createHandler에서 context : ()=>({req})를 건네주어야 한다.
3-2. 또한 createHandler을 호출한 이후 변수에 담아야 한다.
3-3. 그리고 그 변수 즉, const handler = createHandler({settings..}) handler(res, req, next); 을 해주어야한다.
=> req 변수를 조작하였기 때문에 정확한 req를 넘겨주기 위해 이러한 작업을 한다.
3-4. 이 후 리졸버의 두 번쨰 인수의 객체에 req가 담긴다. => {req} 처럼 객체 구조 분해해서 사용하면 좋다.


4. Mongoose를 사용하는 Model에서 ref를 사용해서 다른 컬렉션을 참조하고 해당 컬렉션을 모든 값을 참조하는게 아니라 특정 값만
참조하도록 즉, ObjectId만 참조한다고 했을 경우, ex) post는 user의 ObjectId만 참조한다.
=> user를 찾고 해당되는 키에 user 전체를 주어도 ObjectId만 가져가서 저장한다. => Smart한 기능이다.


5. GraphQL에서 리졸버의 return 값을 명시했음에도 불구하고 클라이언트에서 리턴되는 값을 다르게 지정하면 클라이언트가 요구한
값만 가져온다.


6. 정확한 Client GraphQL JSON 구조
6-1. 인자가 없는 경우 : {
    "query" : {
        method{
            returnValue
            returnValue
        }
    }
}

6-2. 인자가 존재하는 경우 :{
    "query" : "query($userInput : inputData){
        queryName(userInput : $userInput){
            returnValue
            returnValue
        }
    }",
    "variables" : {
        "userInput" : {
            returnData,
            returnData,
            returnData,
            ...
        }
    }
}

