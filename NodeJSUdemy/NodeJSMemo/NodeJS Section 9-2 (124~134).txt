1. 쿼리 매개변수 사용
쿼리 매개변수는 ?를 추가하여 모든 URL에 추가할 수 있으며 edit=true를 비롯한 = 표시로 분할한 키-값 쌍을 넣어주면 된다.
& 분할해 줌으로 다수의 쿼리 매개 변수를 입력할 수 있다.

도달하게 되는 라우트는 ? 표시까지의 부분을 통해 결정된다. => 쿼리매개변수에 의해 컨트롤러에 갈 라우터가 방해받지 않는다. 

항상 컨트롤러에서 쿼리 매개변수는 확인할 수 있다. => req.query.key를 통해 쿼리매개변수 획득가능
쿼리매개변수로 부터 받은 값은 항상 문자열이다. true => "true"

ex) localhost:3000/admin/edit-product/?edit=true
=> /? 쿼리매개변수의 시작점

=> /? 쿼리매개변수의 시작점이고 &를 사용해서 키-value를 연속해서 붙일 수 있다.
=> 쿼리매개변수가 라우터-controller 영향을 주지 않는다.
=> 받는 값은 항상 문자열이다.
=> req.params.key를 통해 쿼리매개변수를 받을 수 있다.


2. 데이터로 제품 편집 페이지 채우기
10-1. get 요청에 의해 admin product로 이동한다. 해당 요청 url은 동적 세그먼트와 쿼리 매개변수가 존재한다.
이를 통해서 제품의 정보를 얻고 input에 쏜다.
10-2. req.query.key를 통해 쿼리 매개변수의 value를 얻고 req.params.key를 통해 동적 세그먼트를 얻는다.
10-3. 만약 쿼리 매개변수의 값이 truth 값이 아니라면 /로 리다이렉트한다.
10-4. Product.findById를 통해 제품 하나의 정보를 가져오고 admin/edit/product 뷰를 반환한다.
10-5. Product.findById로 가져온 데이터를 ejs에서 사용하기 위해 객체의 key-value로 준다.
10-6. ejs에서 editing의 truth를 확인 후에 input value에 해당 product...넣는다.


3. 편집 페이지에 연결하기
admin product.ejs에서 edit 버튼를 눌러서 edit-product 뷰를 반환하게 하자.
9-1. edit은 a태그로 /admin/edit-product/<%=product.id%>?edit=true%>를 설정
9-2. 위의 동적 세그먼트에 의해서 findById로 해당 제품의 정보가 edit-product.ejs에 존재한다.
9-3. 그 정보를 페이지에 부여한다.
9-4. update button를 만들고 동적으로 이름을 부여한다.


4. 제품 데이터 편집하기

10-1. edit-product.ejs에서 form의 button을 눌러서 post 요청을 보낸다. url은 ejs 문법으로 동적으로 보낸다.
=> admin/edit-product(add-product) (POST)
10-2. postEditProduct가 호출된다. post 요청이기에 input의 name=value의 값이 req.body에 존재한다.
10-3. req.body.key로 value에 접근하여 새로운 Product 객체를 생성한다.
10-3. 그 객체의 save() 메서드를 실행한다.

=> 09-fixing-a-delete-product-bug product.js model


5. 제품 삭제 기능 추가
5-1. /admin/products에서는 delete form이 존재한다. post 요청이고 delete를 실행한다.
5-2. input의 hidden를 통해 해당 제품의 id가 전송된다.
5-3. 해당 id를 받은 deleteById 메서드에서 제품 전체를 찾아서 find로 id와 일치하는 제품을 찾고, filter를 통해 일치하지 않는 제품을 전부 찾는다.
5-4. fs.writeFile를 통해 일치하지 않는 제품을 JSON.Stringify를 사용하여 파일에 쓴다.
5-5. 에러가 발생하지 않는다면 Cart.deleteProduct(id, product.price(일치하는 제품의 가격))를 호출한다.


6. 장바구니 항목 삭제
제품 삭제 메서드가 실행되면 자동으로 장바구니 삭제 메서드도 실행된다.
6-1. 파일을 읽고 매개변수 id와 일치하는 제품을 찾는다.
6-2. 일치하는게 없다면 return 한다.
6-3. 제품의 qty를 productQty에 담는다.
6-4. updateCart.products에 id가 일치하지 않는 모든 제품을 담는다.
6-5. totalPrice = totalPrice - productPrice*productQty
6-6. fs.writeFile로 updateCart 쓴다.


7. 장바구니 페이지에 장바구니 항목 표시하기

































