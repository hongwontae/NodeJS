1. 응답 전송
res 객체는 나가야할 응답에 대한 정보를 담고 있다.
res.setHeaders(1,2) => 첫 번쨰 인자는 헤더를 설정한다. 두 번쨰 인자는 헤더의 데이터 종류를 설정한다.
=> ('Content-Type','text/html')
=> 헤더를 설정하지 않으면 브라우저가 데이터 양식을 이해하지 못해서 오류가 발생한다.
res.write() => 데이터를 담을 수 있다. 서블릿처럼 write를 연속으로 사용하여 HTML를 구성한다.
res.end() => 응답의 생성이 끝난 뒤에는 노드에게 알려야 한다. 메서드가 호출된 다음의 코드는 오류가 발생한다.


2. 라우터 요청
<form> 태그의 속성
action => 전송할 서버의 url
methid => 전송될 http method

<input>의 속성
name => 보내는 데이터의 키역할을 한다고 보면 된다.

form 태그의 button의 type이 submit이라면 자동으로 input의 데이터가 서버로 전송된다.
받는 url는 문자열이다.


3. 요청 리디렉션
req에서 받는 모든 정보는 String이다.
응답을 확인하기 위해 응답이 들어오면 file를 생성하고 statusCode = 302와 headers(Location,/)를 설정한다.
=> 파일이 생성되고 다시 /로 돌아온다.


4. 요청 본문 분석

























