1. 웹 작동 방식
URL를 입력하여 웹 페이지에 접근한다. => 이 URL은 서버의 실제 주소에 해당하지는 않는다. 해당 주소를 사람이 읽을 수 있도록 인코딩한 버전이다. 정확히는 서버는 IP 주소를 가지고 있다. 이 IP 주소를 가지고 클라이언트와 서버는 서로 요청하고 응답한다.

위의 서버를 구성하는 언어 중 하나가 Node.js이다. 

요청과 응답 전송이 일부 프로토콜, 즉 표준화된 소통 방식을 통해 이뤄진다.
=> 이를 HTTP(S) 프로토콜이라 한다.
=> 유효한 요청이 어떤 형태를 지니고 어떤 데이터가 브라우저->서버, 서버->브라우저로 전송되어야 할지 정의한다.

Hyper Text Transfer Protocol (Secure)


2. Node 서버 생성

core modules
1. http => 서버를 생성하거나 요청을 전송하는 모듈
2. https => SSL server를 생성하는 모듈

Node.js의 모듈을 사용하려면 해당 모듈을 불러오는 구문을 작성해야 한다.
cosnt 변수명 = require('모듈명');

http 모듈
cosnt server = http.createServer(callbackFunc)
=> 서버를 생성하고 들어오는 요청에 대하여 인자로 받은 함수가 처리해준다.
=> 이 같은 방식을 이벤트 드리븐 아키텍처(EDA)라고 부른다.
=> 서버를 생성하고 변수에 저장해야 한다. 그래야 서버를 특정할 수 있다.

server.listen()
=> Node.js가 스크립트를 바로 종료하지 않고 계속 실행되면서 요청을 받아들이게 한다.
=> listen의 첫 인자는 포트이다.

서버에 간단히 요청을 보내려면 브라우저에서 url로 localhost:3000 접근하면 된다.
=> createServer의 callback 함수가 작동한다.


3. Node의 라이프사이클 및 이벤트 루프
































